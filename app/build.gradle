import org.apache.tools.ant.taskdefs.condition.Os

apply plugin: 'com.android.application'

android {
    compileSdkVersion 21
    buildToolsVersion '21.1.0'
    defaultConfig {
        minSdkVersion 10
        targetSdkVersion 10
        versionCode 1
        versionName "1.0"

        ndk {
            moduleName "app"
        }
    }
    sourceSets.main {
        // jniLibs.srcDir 'src/main/jni' // - Doesn't work, leaves out the .so files generated by ndk-build
        jni.srcDirs = [] //disable automatic ndk-build call
    }

    buildTypes {
        release {
            //runProguard false
            //proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
    }
    productFlavors {
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile fileTree(dir: "$buildDir/libs", include: 'ndk-libs')
    compile 'com.android.support:appcompat-v7:21.0.3'
    compile 'com.android.support:support-v4:21.0.3'
    compile project(':colorpicker')
    // Adds our jar file containing NDK code (.so files)
    compile files("$buildDir/libs/ndk-libs.jar")
}

// Before compiling our app, prepare NDK code
tasks.withType(JavaCompile) {
    compileTask -> compileTask.dependsOn ndkLibsToJar
}

// Packs ndk into JAR
task ndkLibsToJar(type: Zip, dependsOn: 'ndkBuild', description: 'Create a JAR of the native libs') {
    destinationDir new File(buildDir, 'libs')
    baseName 'ndk-libs'
    extension 'jar'
    from(new File(buildDir, 'libs')) { include '**/*.so' }
    into 'lib/'
}

// Build native code using mk files like on Eclipse
task ndkBuild(type: Exec, description: 'Compile JNI source via NDK') {

    def localProperties = new Properties()
    localProperties.load(project.rootProject.file('local.properties').newDataInputStream())
    def gstDir = localProperties.getProperty('gst.dir')

    def ndkDir = project.plugins.findPlugin('com.android.application').getNdkFolder()
    def command = Os.isFamily(Os.FAMILY_WINDOWS) ? "ndk-build.cmd" : "ndk-build"

    commandLine "$ndkDir/$command",
            'NDK_PROJECT_PATH=build',
            'APP_BUILD_SCRIPT=src/main/jni/Android.mk',
            'NDK_APPLICATION_MK=src/main/jni/Application.mk',
            "GSTREAMER_ROOT_ANDROID=$gstDir"
}